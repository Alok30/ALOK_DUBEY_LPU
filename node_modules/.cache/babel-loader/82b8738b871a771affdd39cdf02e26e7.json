{"ast":null,"code":"import _objectSpread from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\n\nvar querystring = require('querystring');\n\nvar baseURL = \"http://localhost:8000/v1/api/list-host/\";\nvar detailURL = \"http://localhost:8000/v1/api/list-devices\";\nvar deviceURL = \"http://localhost:8000/v1/api/list-values/\";\nvar postPORTURL = \"http://localhost:8000/v1/api/add-host/\";\nvar headers = {\n  'Content-Type': 'application/x-www-form-urlencoded',\n  'Accept': 'application/json'\n};\nexport function getDevice() {\n  return axios.get(baseURL, {\n    mode: 'no-cors'\n  }, headers).then(function (response) {\n    return response.data;\n  });\n}\n;\nexport function getDeviceDetails(id) {\n  return axios.get(\"\".concat(detailURL, \"/\").concat(id), {\n    mode: 'no -cors'\n  }, headers).then(function (response) {\n    return response.data;\n  });\n}\nexport function getDeviceName(host_ip, device_name) {\n  console.log('++++++++sevoce post', host_ip, device_name);\n  return axios.get(\"\".concat(deviceURL).concat(host_ip, \"/\").concat(device_name), {\n    mode: 'no -cors'\n  }, headers).then(function (response) {\n    return response.data;\n  });\n}\nexport function postPort(form) {\n  console.log('inside service  alok dubey', _objectSpread({}, form));\n\n  if (form.type === 'configureHost') {\n    return axios.put(\"http://localhost:8000/v1/api/edit-host-detail/\".concat(form.oid, \"/\"), querystring.stringify(_objectSpread({}, form)), headers).then(function (response) {\n      return response.data;\n    });\n  } else {\n    return axios.post(\"http://localhost:8000/v1/api/add-host/\", querystring.stringify(_objectSpread({}, form)), headers).then(function (response) {\n      return response.data;\n    });\n  }\n}\nexport function postDetails(form) {\n  form.mapper_data = JSON.stringify(form.mapper_data);\n  console.log(form.type);\n  console.log('alok++', form.oid);\n\n  if (form.type === 'configureDevice') {\n    return axios.put(\"http://localhost:8000/v1/api/edit-device-details/\".concat(form.oid, \"/\").concat(form.device_name, \"/ \"), querystring.stringify(_objectSpread({}, form)), headers).then(function (response) {\n      return response.data;\n    });\n  } else {\n    return axios.post(\"http://localhost:8000/v1/api/add-device/\".concat(form.oid, \"/\"), querystring.stringify(_objectSpread({}, form)), headers).then(function (response) {\n      return response.data;\n    });\n  }\n}","map":{"version":3,"sources":["/home/nineleaps/test/data/ALOK_DUBEY_LPU/src/services/device.js"],"names":["axios","querystring","require","baseURL","detailURL","deviceURL","postPORTURL","headers","getDevice","get","mode","then","response","data","getDeviceDetails","id","getDeviceName","host_ip","device_name","console","log","postPort","form","type","put","oid","stringify","post","postDetails","mapper_data","JSON"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nvar querystring = require('querystring');\n\nconst baseURL = `http://localhost:8000/v1/api/list-host/`\nconst detailURL = `http://localhost:8000/v1/api/list-devices`\n\nconst deviceURL = `http://localhost:8000/v1/api/list-values/`\nconst postPORTURL = `http://localhost:8000/v1/api/add-host/`\nconst headers = {\n\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Accept': 'application/json'\n};\nexport function getDevice() {\n    return axios.get(baseURL, { mode: 'no-cors' }, headers)\n        .then(response => response.data)\n\n};\nexport function getDeviceDetails(id) {\n    return axios.get(`${detailURL}/${id}`, { mode: 'no -cors' }, headers)\n        .then(response => response.data)\n}\nexport function getDeviceName(host_ip, device_name) {\n    console.log('++++++++sevoce post', host_ip, device_name);\n    return axios.get(`${deviceURL}${host_ip}/${device_name}`, { mode: 'no -cors' }, headers)\n        .then(response => response.data)\n}\nexport function postPort(form) {\n    console.log('inside service  alok dubey', { ...form })\n\n    if(form.type === 'configureHost') {\n        return axios.put(`http://localhost:8000/v1/api/edit-host-detail/${form.oid}/`,\n        querystring.stringify({\n            ...form\n        })\n\n        , headers)\n        .then(response => response.data)\n    } else {\n        return axios.post(`http://localhost:8000/v1/api/add-host/`,\n        querystring.stringify({\n            ...form\n        })\n\n        , headers)\n        .then(response => response.data)\n    }\n    \n}\n\n\nexport function postDetails(form) {\n    form.mapper_data = JSON.stringify(form.mapper_data)\n    console.log(form.type)\n    console.log('alok++',form.oid)\n    if(form.type === 'configureDevice') {\n        return axios.put(`http://localhost:8000/v1/api/edit-device-details/${form.oid}/${form.device_name}/ `,\n        querystring.stringify({\n            ...form\n        })\n        , headers)\n        .then(response => response.data)\n    } else {\n        return axios.post(`http://localhost:8000/v1/api/add-device/${form.oid}/`,\n        querystring.stringify({\n            ...form\n        })\n\n        , headers)\n        .then(response => response.data)\n    }\n    \n\n}"]},"metadata":{},"sourceType":"module"}