{"ast":null,"code":"import _objectSpread from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_DEVICE_LANDING, FETCH_DEVICE_LANDING_SUCCESS, FETCH_DEVICE_LANDING_FAILURE } from \"../actions/constants\";\nexport var deviceDetailsReducer = function deviceDetailsReducer() {\n  var curState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    deviceid: null,\n    device: {},\n    isLoading: false,\n    error: null\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var newState;\n\n  switch (action.type) {\n    case FETCH_DEVICE_LANDING:\n      newState = _objectSpread({}, curState, {\n        deviceId: action.payload.id,\n        error: null,\n        isLoading: FETCH_DEVICE_LANDING\n      });\n      break;\n\n    case FETCH_DEVICE_LANDING_SUCCESS:\n      newState = _objectSpread({}, curState, {\n        isLoading: FETCH_DEVICE_LANDING_SUCCESS,\n        device: action.payload.device\n      });\n      break;\n\n    case FETCH_DEVICE_LANDING_FAILURE:\n      newState = _objectSpread({}, curState, {\n        isLoading: FETCH_DEVICE_LANDING_FAILURE,\n        device: {},\n        error: action.payload.error\n      });\n      break;\n\n    default:\n      newState = curState;\n  }\n\n  return newState;\n};","map":{"version":3,"sources":["/home/nineleaps/test/data/ALOK_DUBEY_LPU/src/reducers/deviceDetaislReducer.js"],"names":["FETCH_DEVICE_LANDING","FETCH_DEVICE_LANDING_SUCCESS","FETCH_DEVICE_LANDING_FAILURE","deviceDetailsReducer","curState","deviceid","device","isLoading","error","action","newState","type","deviceId","payload","id"],"mappings":";AAAA,SAASA,oBAAT,EAA+BC,4BAA/B,EAA4DC,4BAA5D,QAA+F,sBAA/F;AAEA,OAAO,IAAMC,oBAAoB,GAAE,SAAtBA,oBAAsB,GAMxB;AAAA,MANyBC,QAMzB,uEANkC;AAC1CC,IAAAA,QAAQ,EAAC,IADiC;AAE1CC,IAAAA,MAAM,EAAC,EAFmC;AAG1CC,IAAAA,SAAS,EAAC,KAHgC;AAI1CC,IAAAA,KAAK,EAAC;AAJoC,GAMlC;AAAA,MAATC,MAAS;AACP,MAAIC,QAAJ;;AAEA,UAAOD,MAAM,CAACE,IAAd;AACI,SAAKX,oBAAL;AACGU,MAAAA,QAAQ,qBAAKN,QAAL;AAAcQ,QAAAA,QAAQ,EAACH,MAAM,CAACI,OAAP,CAAeC,EAAtC;AAAyCN,QAAAA,KAAK,EAAC,IAA/C;AAAoDD,QAAAA,SAAS,EAACP;AAA9D,QAAR;AACA;;AACH,SAAKC,4BAAL;AACGS,MAAAA,QAAQ,qBAAKN,QAAL;AAAcG,QAAAA,SAAS,EAACN,4BAAxB;AAAqDK,QAAAA,MAAM,EAACG,MAAM,CAACI,OAAP,CAAeP;AAA3E,QAAR;AACA;;AACH,SAAKJ,4BAAL;AACKQ,MAAAA,QAAQ,qBAAKN,QAAL;AAAcG,QAAAA,SAAS,EAACL,4BAAxB;AAAqDI,QAAAA,MAAM,EAAC,EAA5D;AAA+DE,QAAAA,KAAK,EAACC,MAAM,CAACI,OAAP,CAAeL;AAApF,QAAR;AACF;;AACH;AACAE,MAAAA,QAAQ,GAACN,QAAT;AAXJ;;AAeA,SAAOM,QAAP;AACH,CAzBM","sourcesContent":["import { FETCH_DEVICE_LANDING ,FETCH_DEVICE_LANDING_SUCCESS,FETCH_DEVICE_LANDING_FAILURE} from \"../actions/constants\";\n\nexport const deviceDetailsReducer =(curState={\n   deviceid:null,\n   device:{},\n   isLoading:false,\n   error:null\n\n},action)=>{\n    let newState;\n        \n    switch(action.type){\n        case FETCH_DEVICE_LANDING:\n           newState={...curState,deviceId:action.payload.id,error:null,isLoading:FETCH_DEVICE_LANDING}\n           break;\n        case FETCH_DEVICE_LANDING_SUCCESS:\n           newState={...curState,isLoading:FETCH_DEVICE_LANDING_SUCCESS,device:action.payload.device}\n           break;\n        case FETCH_DEVICE_LANDING_FAILURE:\n             newState={...curState,isLoading:FETCH_DEVICE_LANDING_FAILURE,device:{},error:action.payload.error}\n           break;\n        default:\n        newState=curState;\n\n\n    }\n    return newState;\n}\n\n"]},"metadata":{},"sourceType":"module"}