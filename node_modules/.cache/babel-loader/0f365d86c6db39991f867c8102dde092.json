{"ast":null,"code":"import _classCallCheck from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/src/components/deviceDetailsScreen.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport './app.css';\nimport { FETCH_DEVICE_NAME, FETCH_DEVICE_NAME_SUCCESS, FETCH_DEVICE_NAME_FAILURE } from '../actions/constants';\nimport { getDeviceNameThunk } from '../actions/creators';\nimport axios from 'axios';\nimport { throws } from 'assert';\nimport { Link } from 'react-router-dom';\nimport model from './model';\n\nvar deviceDetailsScreen =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(deviceDetailsScreen, _Component);\n\n  function deviceDetailsScreen(props, context) {\n    var _this;\n\n    _classCallCheck(this, deviceDetailsScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(deviceDetailsScreen).call(this, props, context));\n\n    _this.getDeviceDetails = function (id, name) {\n      console.log('$$$4', id);\n      console.log('al;okip', name);\n      axios.get(\"http://localhost:8000/v1/api/retry-values/127.0.0.35/\".concat(id, \"/\").concat(name, \"/\")).then(function (response) {\n        _this.setState({\n          getDeviceDetails: response.data,\n          data: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n\n      _this.setState({\n        show: false\n      });\n    };\n\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    _this.state = {\n      show: false\n    };\n    return _this;\n  }\n\n  _createClass(deviceDetailsScreen, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var el;\n      console.log('props inside table alok++', this.props.deviceInfo.device);\n      console.log('alok+++++ device', this.props.deviceInfo.device.data); // let allDevices = this.props.deviceDetails;\n      // console.log('222',allDevices);\n\n      var dataDeatils = this.props.deviceInfo.device;\n      var allDevices = this.props.deviceDetails;\n      console.log('alok inside details', allDevices); // console.log(dataDeatils)\n      // console.log('alok',dataDeatils.data)\n      //console.log(dataDeatils.data.device_name)\n\n      console.log('+++++++++++++++++++++++++++++++alok', dataDeatils.data);\n\n      switch (this.props.deviceInfo.isLoading) {\n        case FETCH_DEVICE_NAME:\n          el = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          });\n          break;\n\n        case FETCH_DEVICE_NAME_SUCCESS:\n          el = React.createElement(\"div\", {\n            className: \"container-fluid\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(\"nav\", {\n            \"aria-label\": \"breadcrumb\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, React.createElement(\"ol\", {\n            className: \"breadcrumb\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            className: \"breadcrumb-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/home\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, \"Home\"))), React.createElement(\"li\", {\n            className: \"breadcrumb-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          })), React.createElement(\"li\", {\n            className: \"breadcrumb-item active\",\n            \"aria-current\": \"page\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \"host_name\")))), React.createElement(\"div\", {\n            className: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary pull-right\",\n            onClick: function onClick() {\n              return _this2.getHostDetails(allDevices._id.$oid);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, \" Configure Host\"), React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-success pull-right\",\n            onClick: function onClick() {\n              return _this2.handlePopUp(allDevices._id.$oid);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, \"+ Add New Device\"), React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, \"Device Name\")), React.createElement(\"div\", {\n            className: \"row \",\n            style: {\n              marginTop: '40px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col col-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, \"BARCODE\"), React.createElement(\"div\", {\n            className: \"col col-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, \"PARAMETER ID\"), React.createElement(\"div\", {\n            className: \"col col-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \"PARAMETER MAPPING\"), React.createElement(\"div\", {\n            className: \"col col-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \"VALUE\"), React.createElement(\"div\", {\n            className: \"col col-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, \"TIMESTAMP\"), React.createElement(\"div\", {\n            className: \"col col-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, \"STATUS\")), this.props.deviceInfo.device.data.map(function (device) {\n            if (device._id) {\n              return React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137\n                },\n                __self: this\n              }, device.results.map(function (parameter) {\n                return React.createElement(\"div\", {\n                  className: \"row\",\n                  style: {\n                    marginTop: '10px'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 140\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"col col-2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 141\n                  },\n                  __self: this\n                }, device.specimen_id), React.createElement(\"div\", {\n                  className: \"col col-2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 144\n                  },\n                  __self: this\n                }, parameter.parameter_name), React.createElement(\"div\", {\n                  className: \"col col-2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 149\n                  },\n                  __self: this\n                }, React.createElement(\"button\", {\n                  variant: \"primary\",\n                  onClick: _this2.handleShow,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 151\n                  },\n                  __self: this\n                }, parameter.parameter_mapping, \"   \")), React.createElement(\"div\", {\n                  className: \"col col-2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 155\n                  },\n                  __self: this\n                }, parameter.parameter_result), React.createElement(\"div\", {\n                  className: \"col col-2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 160\n                  },\n                  __self: this\n                }, device.timestamp), React.createElement(\"div\", {\n                  className: \"col col-2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 163\n                  },\n                  __self: this\n                }, device.status), React.createElement(\"hr\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 166\n                  },\n                  __self: this\n                }), React.createElement(\"model\", {\n                  data: _this2.state.data,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 167\n                  },\n                  __self: this\n                }), React.createElement(React.Fragment, null, React.createElement(Modal, {\n                  show: _this2.state.show,\n                  onHide: _this2.handleClose,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 175\n                  },\n                  __self: this\n                }, React.createElement(Modal.Header, {\n                  closeButton: true,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 176\n                  },\n                  __self: this\n                }, React.createElement(Modal.Title, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 177\n                  },\n                  __self: this\n                }, \"BARCODE\", React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 177\n                  },\n                  __self: this\n                }), device.specimen_id)), React.createElement(Modal.Body, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 181\n                  },\n                  __self: this\n                }, \" \", parameter.parameter_name, parameter.parameter_mapping), React.createElement(Modal.Body, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 184\n                  },\n                  __self: this\n                }, \"Value:  \", parameter.parameter_result), React.createElement(Modal.Body, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 187\n                  },\n                  __self: this\n                }, \"Timestamp   \", device.timestamp), React.createElement(Modal.Body, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 190\n                  },\n                  __self: this\n                }, \"No of Trials:  \", device.tries), React.createElement(Modal.Body, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 194\n                  },\n                  __self: this\n                }, \"Message Recived\", device.messages.map(function (messages) {\n                  return React.createElement(Modal.Body, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 199\n                    },\n                    __self: this\n                  }, messages);\n                })), React.createElement(Modal.Footer, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 205\n                  },\n                  __self: this\n                }, React.createElement(Button, {\n                  variant: \"secondary\",\n                  onClick: _this2.handleClose,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 206\n                  },\n                  __self: this\n                }, \"close\"), React.createElement(Button, {\n                  variant: \"primary\",\n                  onClick: function onClick() {\n                    return _this2.getDeviceDetails(device.device_id, device._id.$oid);\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 209\n                  },\n                  __self: this\n                }, \"Save Changes\")))));\n              }));\n            }\n          })) // <table class=\"table\">\n          //   <thead>\n          //     <tr className=\"rectangle\">\n          //       <th scope=\"col\" className=\"barcode\" id=\"col3\">BARCODE</th>\n          //       <th scope=\"col\" className=\"parameter-id\" id=\"col1\">PARAMETER ID</th>\n          //       <th scope=\"col\" className=\"parameter-mapping\" id=\"col4\">PARAMETER MAPPING</th>\n          //       <th scope=\"col\" className=\"value\" id=\"col5\">VALUE</th>\n          //       <th scope=\"col\" className=\"timestamp\" id=\"col6\">TIMESTAMP</th>\n          //       <th scope=\"col\" className=\"status\" id=\"col7\">STATUS</th>\n          //     </tr>\n          //   </thead>\n          //   <tbody>\n          //     {\n          //       this.props.deviceInfo.device.data.map(device => {\n          //         if (device._id) {\n          //           return <tr>\n          //             {\n          //               device.results.map(\n          //                 parameter => {\n          //                   return <tr>\n          //                     <td scope=\"col\" className=\"barcode\"> {device.specimen_id}</td>\n          //                     <td>\n          //                       <td>{parameter.parameter_mapping}</td>\n          //                       <td>{parameter.parameter_name}</td>\n          //                       <td></td>\n          //                     </td>\n          //                     <td>{device.timestamp}</td>\n          //                     <td>{device.status}</td>\n          //                   </tr>\n          //                 }\n          //               )\n          //             }\n          //             {/* <button type=\"button\" className=\"btn btn-success\" onClick={() => this.getDeviceDetails(device.device_id, device._id.$oid)} >Configure Device</button> */}\n          //           </tr>\n          //         }\n          //       })\n          //     }\n          //   </tbody>\n          // </table>\n          ;\n          break;\n\n        case FETCH_DEVICE_NAME_FAILURE:\n          el = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279\n            },\n            __self: this\n          }, \"Failure\");\n          break;\n\n        default:\n          el = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284\n            },\n            __self: this\n          });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"  \", el);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(getDeviceNameThunk(this.props.match.params.host_ip, this.props.match.params.device_name));\n    }\n  }]);\n\n  return deviceDetailsScreen;\n}(Component);\n\nexport { deviceDetailsScreen as default };","map":{"version":3,"sources":["/home/nineleaps/test/data/ALOK_DUBEY_LPU/src/components/deviceDetailsScreen.js"],"names":["React","Component","Button","Modal","FETCH_DEVICE_NAME","FETCH_DEVICE_NAME_SUCCESS","FETCH_DEVICE_NAME_FAILURE","getDeviceNameThunk","axios","throws","Link","model","deviceDetailsScreen","props","context","getDeviceDetails","id","name","console","log","get","then","response","setState","data","catch","error","show","handleShow","bind","handleClose","state","el","deviceInfo","device","dataDeatils","allDevices","deviceDetails","isLoading","getHostDetails","_id","$oid","handlePopUp","marginTop","map","results","parameter","specimen_id","parameter_name","parameter_mapping","parameter_result","timestamp","status","tries","messages","device_id","dispatch","match","params","host_ip","device_name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Modal } from 'react-bootstrap';\nimport './app.css'\nimport {\n  FETCH_DEVICE_NAME,\n  FETCH_DEVICE_NAME_SUCCESS,\n  FETCH_DEVICE_NAME_FAILURE\n} from '../actions/constants'\n\n\nimport { getDeviceNameThunk } from '../actions/creators'\nimport axios from 'axios';\nimport { throws } from 'assert';\nimport { Link } from 'react-router-dom'\nimport model from './model';\nexport default class deviceDetailsScreen extends Component {\n\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      show: false,\n    };\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n  getDeviceDetails = (id, name) => {\n    console.log('$$$4', id)\n    console.log('al;okip', name)\n    axios.get(`http://localhost:8000/v1/api/retry-values/127.0.0.35/${id}/${name}/`).then(response => {\n      this.setState({\n        getDeviceDetails: response.data,\n        data: response.data\n      })\n    }).catch(error => {\n      console.log(error);\n    })\n    this.setState({ show: false });\n  }\n  render() {\n\n    let el;\n    console.log('props inside table alok++', this.props.deviceInfo.device)\n    console.log('alok+++++ device', this.props.deviceInfo.device.data)\n    // let allDevices = this.props.deviceDetails;\n    // console.log('222',allDevices);\n    let dataDeatils = this.props.deviceInfo.device\n    let allDevices = this.props.deviceDetails;\n    console.log('alok inside details', allDevices);\n    // console.log(dataDeatils)\n    // console.log('alok',dataDeatils.data)\n    //console.log(dataDeatils.data.device_name)\n    console.log('+++++++++++++++++++++++++++++++alok', dataDeatils.data)\n\n    switch (this.props.deviceInfo.isLoading) {\n      case FETCH_DEVICE_NAME:\n        el = (\n          <div>\n\n          </div>\n        );\n        break;\n      case FETCH_DEVICE_NAME_SUCCESS:\n        el = (\n\n          <div className=\"container-fluid\">\n            <nav aria-label=\"breadcrumb\">\n              <ol className=\"breadcrumb\">\n                <li className=\"breadcrumb-item\"><a href=\"#\">\n                  <Link to='/home'>Home</Link>\n                </a></li>\n\n                {/* <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              <Link to={`/${:this.props.deviceInfo.device.data}`}></Link>\n              host_name</li> */}\n                <li className=\"breadcrumb-item\"><a href=\"#\">\n                  {/* <Link to={`/${this.props.deviceInfo.device.data. device._id.$oid}`} >Home</Link> */}\n                </a></li>\n                <li className=\"breadcrumb-item active\" aria-current=\"page\"><a href=\"#\">host_name</a></li>\n\n                {/* <li className=\"breadcrumb-item active\" aria-current=\"page\">{allDevices.host_name}</li> */}\n              </ol>\n\n              {/* <div>{allDevices.host_name}</div>\n            <span>IP: {allDevices.ip_address}</span>\n            <span style={{ \"font-weight\": \"bold\" }}>.</span>\n            <span> Port No: {allDevices.port_no}</span>\n            <div>\n              <span style={{ \"font-weight\": \"bold\", \"color\": \"#00ff00\" }}>.</span> <span> Connected</span>\n            </div>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.getHostDetails(allDevices._id.$oid)} > Configure Host</button>\n\n              <button type=\"button\" className=\"btn btn-success\" onClick={() => this.handlePopUp(allDevices._id.$oid)} >+ Add New Device</button> */}\n\n            </nav>\n            <div className>\n              <button type=\"button\" className=\"btn btn-primary pull-right\" onClick={() => this.getHostDetails(allDevices._id.$oid)} > Configure Host</button>\n              <button type=\"button\" className=\"btn btn-success pull-right\" onClick={() => this.handlePopUp(allDevices._id.$oid)} >+ Add New Device</button>\n              <h3>Device Name</h3>\n            </div>\n            <div className=\"row \" style={{ marginTop: '40px' }}>\n\n\n\n              <div className=\"col col-2\">\n                BARCODE\n              </div>\n              <div className=\"col col-2\">\n                PARAMETER ID\n              </div>\n              <div className=\"col col-2\">\n                PARAMETER MAPPING\n              </div>\n              <div className=\"col col-2\">\n                VALUE\n              </div>\n              <div className=\"col col-2\">\n                TIMESTAMP\n              </div>\n              <div className=\"col col-2\">\n                STATUS\n              </div>\n            </div>\n            {\n              this.props.deviceInfo.device.data.map(device => {\n                if (device._id) {\n                  return <div>\n                    {\n                      device.results.map(parameter => {\n                        return <div className=\"row\" style={{ marginTop: '10px' }}>\n                          <div className=\"col col-2\">\n                            {device.specimen_id}\n                          </div>\n                          <div className=\"col col-2\">\n                          {parameter.parameter_name}\n                          \n                         \n                          </div>\n                          <div className=\"col col-2\">\n                            {/* <Link to={`/${parameter.parameter_result}`} component={parameter.parameter_result}> {parameter.parameter_name}</Link> */}\n                            <button variant=\"primary\"\n                             onClick={this.handleShow}>\n                            {parameter.parameter_mapping}   </button>\n                          </div>\n                          <div className=\"col col-2\">\n                            {/* {parameter.parameter_result} */}\n                            {parameter.parameter_result}\n                            \n                          </div>\n                          <div className=\"col col-2\">\n                            {device.timestamp}\n                          </div>\n                          <div className=\"col col-2\">\n                            {device.status}\n                          </div>\n                          <hr />\n                          {<model data={this.state.data} />}\n                          {/* <button type=\"button\" className=\"btn btn-success\" onClick={() => this.getDeviceDetails(device.device_id, device._id.$oid)} >\n\n\n                            Configure Device</button> */}\n                          <>\n                           \n\n                            <Modal show={this.state.show} onHide={this.handleClose}>\n                              <Modal.Header closeButton>\n                                <Modal.Title>BARCODE<br/>\n                                  {device.specimen_id}\n                                </Modal.Title>\n                              </Modal.Header>\n                              <Modal.Body> {parameter.parameter_name}\n                              {parameter.parameter_mapping}\n                              </Modal.Body>\n                              <Modal.Body>\n                              Value:  { parameter.parameter_result}\n                              </Modal.Body>\n                              <Modal.Body>\n                             Timestamp   { device.timestamp}\n                              </Modal.Body>\n                              <Modal.Body>\n\n                              No of Trials:  { device.tries}\n                              </Modal.Body>\n                              <Modal.Body>\n                              Message Recived \n                                { \n\n                                  device.messages.map(messages=>{\n                                  return   <Modal.Body>\n                               { messages}\n                                </Modal.Body>\n                                  })\n                                }\n                              </Modal.Body>\n                              <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={this.handleClose}>\n                               close\n                            </Button>\n                                <Button variant=\"primary\"  onClick={() => this.getDeviceDetails(device.device_id, device._id.$oid)}>\n                                  Save Changes\n                              \n                              </Button>\n                              </Modal.Footer>\n                            </Modal>\n                          </>\n                        </div>\n\n\n                      })\n                    }\n                  </div>\n                }\n              })\n            }\n\n          </div>\n\n\n          // <table class=\"table\">\n          //   <thead>\n          //     <tr className=\"rectangle\">\n          //       <th scope=\"col\" className=\"barcode\" id=\"col3\">BARCODE</th>\n          //       <th scope=\"col\" className=\"parameter-id\" id=\"col1\">PARAMETER ID</th>\n          //       <th scope=\"col\" className=\"parameter-mapping\" id=\"col4\">PARAMETER MAPPING</th>\n          //       <th scope=\"col\" className=\"value\" id=\"col5\">VALUE</th>\n          //       <th scope=\"col\" className=\"timestamp\" id=\"col6\">TIMESTAMP</th>\n          //       <th scope=\"col\" className=\"status\" id=\"col7\">STATUS</th>\n          //     </tr>\n          //   </thead>\n          //   <tbody>\n          //     {\n          //       this.props.deviceInfo.device.data.map(device => {\n          //         if (device._id) {\n          //           return <tr>\n\n          //             {\n          //               device.results.map(\n          //                 parameter => {\n          //                   return <tr>\n\n\n          //                     <td scope=\"col\" className=\"barcode\"> {device.specimen_id}</td>\n          //                     <td>\n\n          //                       <td>{parameter.parameter_mapping}</td>\n          //                       <td>{parameter.parameter_name}</td>\n          //                       <td></td>\n\n          //                     </td>\n          //                     <td>{device.timestamp}</td>\n          //                     <td>{device.status}</td>\n          //                   </tr>\n          //                 }\n          //               )\n          //             }\n\n\n          //             {/* <button type=\"button\" className=\"btn btn-success\" onClick={() => this.getDeviceDetails(device.device_id, device._id.$oid)} >Configure Device</button> */}\n\n          //           </tr>\n          //         }\n          //       })\n          //     }\n          //   </tbody>\n          // </table>\n        );\n        break;\n      case FETCH_DEVICE_NAME_FAILURE:\n        el = (<div>\n          Failure\n          </div>)\n        break;\n      default:\n        el = (<div></div>);\n    }\n    return <div>  {el}\n      {/* <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Card title</h5>\n          <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\n          <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n          <a href=\"#\" class=\"card-link\">Card link</a>\n          <a href=\"#\" class=\"card-link\">Another link</a>\n        </div>\n      </div> */}\n    </div>\n  }\n  componentDidMount() {\n    this.props.dispatch(getDeviceNameThunk(this.props.match.params.host_ip, this.props.match.params.device_name))\n  }\n}"]},"metadata":{},"sourceType":"module"}