{"ast":null,"code":"import _classCallCheck from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/src/components/deviceLandingScreen.js\";\nimport React, { Component } from \"react\";\nimport \"./deviceLandingScreen.css\";\nimport { Link } from 'react-router-dom';\nimport { FETCH_DEVICE_LANDING, FETCH_DEVICE_LANDING_SUCCESS, FETCH_DEVICE_LANDING_FAILURE } from '../actions/constants';\nimport { getDeviceDetailsThunk } from '../actions/creators'; // import Popup from './Popup';\n\nimport DeviceName from '../containers/details';\nimport Configuration from '../containers/config';\nimport { all } from \"q\";\nimport axios from \"axios\";\nimport PortForm from '../containers/portdetails';\nimport './device.css';\n\nvar Popup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popup, _React$Component);\n\n  function Popup() {\n    _classCallCheck(this, Popup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Popup).apply(this, arguments));\n  }\n\n  _createClass(Popup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Leela\"), React.createElement(\"button\", {\n        onClick: function onClick() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"close me\")));\n    }\n  }]);\n\n  return Popup;\n}(React.Component);\n\nvar deviceLandingScreen =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(deviceLandingScreen, _Component);\n\n  function deviceLandingScreen() {\n    var _this;\n\n    _classCallCheck(this, deviceLandingScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(deviceLandingScreen).call(this));\n\n    _this.handlePopUp = function (hostName) {\n      _this.setState({\n        showPopup: !_this.state.showPopup,\n        oid: hostName\n      });\n    };\n\n    _this.getHostDetails = function (id) {\n      console.log(window.location.origin);\n      console.log(\"http://localhost:8000/v1/api/add-device/\".concat(id, \"/\"));\n      axios.get(\"http://localhost:8000/v1/api/get-host-detail/\".concat(id, \"/\")).then(function (response) {\n        _this.setState({\n          getHostDetailsResponse: response.data,\n          showPortDetailsPopUp: true\n        });\n      }).catch(function (error) {\n        console.log(error);\n      }); // axios.get(window.location).then().catch()\n    };\n\n    _this.getDeviceDetails = function (id, name) {\n      axios.get(\"http://localhost:8000/v1/api/devices-details/\".concat(id, \"/\").concat(name, \"/\")).then(function (response) {\n        _this.setState({\n          getDeviceDetails: response.data,\n          showConfigureDetailsPopUp: true,\n          deviceName: name\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      showPopup: false,\n      oid: undefined,\n      getHostDetailsResponse: [],\n      getDeviceDetails: undefined,\n      showPortDetailsPopUp: false,\n      showConfigureDetailsPopUp: false,\n      deviceName: undefined\n    };\n    return _this;\n  } // togglePopup() {\n  //   this.setState({\n  //     showPopup: !this.state.showPopup\n  //   });\n  // }\n\n\n  _createClass(deviceLandingScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var allDevices = this.props.deviceDetails.device.data;\n      console.log(allDevices);\n      var oidc = this.props.deviceDetails;\n      var el;\n\n      switch (this.props.deviceDetails.isLoading) {\n        case FETCH_DEVICE_LANDING:\n          el = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, \"wait\"));\n          break;\n\n        case FETCH_DEVICE_LANDING_SUCCESS:\n          el = React.createElement(\"div\", {\n            className: \"container-fluid\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(\"nav\", {\n            \"aria-label\": \"breadcrumb\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, React.createElement(\"ol\", {\n            className: \"breadcrumb\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            className: \"breadcrumb-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/home\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, \"Home\"))), React.createElement(\"li\", {\n            className: \"breadcrumb-item active\",\n            \"aria-current\": \"page\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, allDevices.host_name)), React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary pull-right\",\n            onClick: function onClick() {\n              return _this2.getHostDetails(allDevices._id.$oid);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, \" Configure Host\"), React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-success pull-right\",\n            onClick: function onClick() {\n              return _this2.handlePopUp(allDevices._id.$oid);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, \"+ Add New Device\"), React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, allDevices.host_name), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, \"IP: \", allDevices.ip_address), React.createElement(\"span\", {\n            style: {\n              \"font-weight\": 1200\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, \".\"), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, \" Port No: \", allDevices.port_no), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            style: {\n              \"font-weight\": \"bold\",\n              \"color\": \"#00ff00\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, \".\"), \" \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, \" Connected\"))), this.state.showPopup && React.createElement(Configuration, {\n            oid: this.state.oid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }), this.state.showPortDetailsPopUp && React.createElement(PortForm, {\n            data: this.state.getHostDetailsResponse,\n            type: \"configureHost\",\n            oid: allDevices._id.$oid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }), this.state.showConfigureDetailsPopUp && React.createElement(Configuration, {\n            type: \"configureDevice\",\n            oid: allDevices._id.$oid,\n            deviceName: this.state.deviceName,\n            deviceResponse: this.state.getDeviceDetails,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, allDevices.devices.map(function (eachDevice) {\n            return React.createElement(\"div\", {\n              className: \"col-md-4 col-12 col-sm-6\",\n              style: {\n                marginTop: '20px'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"card\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"card-body\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fa fa-arrow-right float-right text-success \",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }), React.createElement(\"h5\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138\n              },\n              __self: this\n            }, eachDevice.device_name), React.createElement(\"h5\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            }, \"port no: \", eachDevice.port_no ? eachDevice.port_no : \"null\"), React.createElement(\"h5\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148\n              },\n              __self: this\n            }, \"adapter: \", eachDevice.adapter), React.createElement(\"h5\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 151\n              },\n              __self: this\n            }, \"mapper: \", eachDevice.mapper_file)), React.createElement(\"div\", {\n              className: \"card-body\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: function onClick() {\n                return _this2.getDeviceDetails(allDevices._id.$oid, eachDevice.device_name);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157\n              },\n              __self: this\n            }, \"Configure Device\"), React.createElement(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159\n              },\n              __self: this\n            }, \"  \", React.createElement(Link, {\n              to: \"/\".concat(eachDevice.host_ip, \"/\").concat(eachDevice.device_name),\n              component: DeviceName,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159\n              },\n              __self: this\n            }, \"View Values\")))));\n          })));\n          break;\n\n        case FETCH_DEVICE_LANDING_FAILURE:\n          el = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          }, \"error\"), React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }, \"error.message\"));\n          break;\n\n        default:\n          el = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, \"default\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"   \", el);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(getDeviceDetailsThunk(this.props.match.params.id));\n    }\n  }]);\n\n  return deviceLandingScreen;\n}(Component);\n\nexport { deviceLandingScreen as default };","map":{"version":3,"sources":["/home/nineleaps/test/data/ALOK_DUBEY_LPU/src/components/deviceLandingScreen.js"],"names":["React","Component","Link","FETCH_DEVICE_LANDING","FETCH_DEVICE_LANDING_SUCCESS","FETCH_DEVICE_LANDING_FAILURE","getDeviceDetailsThunk","DeviceName","Configuration","all","axios","PortForm","Popup","deviceLandingScreen","handlePopUp","hostName","setState","showPopup","state","oid","getHostDetails","id","console","log","window","location","origin","get","then","response","getHostDetailsResponse","data","showPortDetailsPopUp","catch","error","getDeviceDetails","name","showConfigureDetailsPopUp","deviceName","undefined","allDevices","props","deviceDetails","device","oidc","el","isLoading","host_name","_id","$oid","ip_address","port_no","devices","map","eachDevice","marginTop","device_name","adapter","mapper_file","host_ip","dispatch","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./deviceLandingScreen.css\";\nimport { Link } from 'react-router-dom'\nimport {\n  FETCH_DEVICE_LANDING,\n  FETCH_DEVICE_LANDING_SUCCESS,\n  FETCH_DEVICE_LANDING_FAILURE,\n} from '../actions/constants'\nimport { getDeviceDetailsThunk } from '../actions/creators';\n// import Popup from './Popup';\nimport DeviceName from '../containers/details'\nimport Configuration from '../containers/config';\nimport { all } from \"q\";\nimport axios from \"axios\";\nimport PortForm from '../containers/portdetails';\nimport './device.css'\nclass Popup extends React.Component {\n\n  render() {\n    return (\n      <div className='popup'>\n        <div className='popup_inner'>\n          <h1>Leela</h1>\n          <button onClick={() => { }}>close me</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default class deviceLandingScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showPopup: false,\n      oid: undefined,\n      getHostDetailsResponse: [],\n      getDeviceDetails: undefined,\n      showPortDetailsPopUp: false,\n      showConfigureDetailsPopUp: false,\n      deviceName: undefined\n    };\n  }\n  // togglePopup() {\n  //   this.setState({\n  //     showPopup: !this.state.showPopup\n  //   });\n  // }\n  handlePopUp = (hostName) => {\n    this.setState({ showPopup: !this.state.showPopup, oid: hostName });\n  }\n\n  getHostDetails = (id) => {\n    console.log(window.location.origin);\n    console.log(`http://localhost:8000/v1/api/add-device/${id}/`);\n    axios.get(`http://localhost:8000/v1/api/get-host-detail/${id}/`).then(response => {\n      this.setState({\n        getHostDetailsResponse: response.data,\n        showPortDetailsPopUp: true\n      })\n    }).catch(error => {\n      console.log(error);\n    })\n    // axios.get(window.location).then().catch()\n  }\n\n  getDeviceDetails = (id, name) => {\n    axios.get(`http://localhost:8000/v1/api/devices-details/${id}/${name}/`).then(response => {\n      this.setState({\n        getDeviceDetails: response.data,\n        showConfigureDetailsPopUp: true,\n        deviceName: name\n      })\n    }).catch(error => {\n      console.log(error);\n    })\n  }\n\n\n  render() {\n\n    let allDevices = this.props.deviceDetails.device.data;\n    console.log(allDevices);\n    let oidc = this.props.deviceDetails;\n    let el;\n    switch (this.props.deviceDetails.isLoading) {\n      case FETCH_DEVICE_LANDING:\n        el = (\n          <div>\n            <h2>wait</h2>\n          </div>\n        );\n        break;\n      case FETCH_DEVICE_LANDING_SUCCESS:\n        el = (\n          <div className=\"container-fluid\">\n            <nav aria-label=\"breadcrumb\">\n              <ol className=\"breadcrumb\">\n                <li className=\"breadcrumb-item\"><a href=\"#\">\n                <Link to='/home' >Home</Link>\n                </a></li>\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">{allDevices.host_name}</li>\n              </ol>\n              <button type=\"button\" className=\"btn btn-primary pull-right\" onClick={() => this.getHostDetails(allDevices._id.$oid)} > Configure Host</button>\n\n              <button type=\"button\" className=\"btn btn-success pull-right\" onClick={() => this.handlePopUp(allDevices._id.$oid)} >+ Add New Device</button>\n              <h2>{allDevices.host_name}</h2>\n              <span>IP: {allDevices.ip_address}</span>\n              <span style={{ \"font-weight\": 1200 }}>.</span>\n              <span> Port No: {allDevices.port_no}</span>\n              <div>\n                <span style={{ \"font-weight\": \"bold\", \"color\": \"#00ff00\" }}>.</span> <span> Connected</span>\n              </div>\n\n\n            </nav>\n            {this.state.showPopup &&\n              <Configuration oid={this.state.oid} />\n\n            }\n            {this.state.showPortDetailsPopUp && <PortForm data={this.state.getHostDetailsResponse} type={\"configureHost\"} oid={allDevices._id.$oid} />}\n            {this.state.showConfigureDetailsPopUp && <Configuration type={\"configureDevice\"} oid={allDevices._id.$oid} deviceName={this.state.deviceName} deviceResponse={this.state.getDeviceDetails} />}\n\n            <div className=\"row\">\n              {\n                allDevices.devices.map(eachDevice => {\n                  return (\n                    <div className=\"col-md-4 col-12 col-sm-6\" style={{marginTop:'20px'}}>\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n\n                          <i className=\"fa fa-arrow-right float-right text-success \"></i>\n                          {/* <h5 className=\"card-title font_color \">Host Name  {device.devices.adapter}</h5> */}\n                          {/* <h5 className=\"card-title font_color\">Ip: {device.devices.ip_address}</h5>\n                            <h5 className=\"card-title font_color\">Port No:{device.devices.port_no}</h5> */}\n                          {/* <h3>{device.devices[0].adapter}</h3> */}\n                          {/* <h3>{device.devices.adapter}</h3> */}\n                          <h5 >\n                            {eachDevice.device_name}\n\n\n                            {/* <Link to={`/${this.props.deviceDetails.device.host_ip}/${this.props.deviceDetails.device.device_name}`} component={DeviceName}>{device.ip_address}</Link> */}\n\n                          </h5>\n                          <h5>\n                            port no: {eachDevice.port_no ? eachDevice.port_no : \"null\"}\n                          </h5>\n                          <h5>\n                            adapter: {eachDevice.adapter}\n                          </h5>\n                          <h5>\n                            mapper: {eachDevice.mapper_file}\n                          </h5>\n                        </div>\n                        <div className=\"card-body\">\n\n                          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.getDeviceDetails(allDevices._id.$oid, eachDevice.device_name)} >Configure Device</button>\n\n                        <button type=\"button\" className=\"btn btn-success\">  <Link to={`/${eachDevice.host_ip}/${eachDevice.device_name}`} component={DeviceName}>View Values</Link></button>\n\n                        </div>\n                      </div>\n\n                    </div>\n\n                  )\n                }\n                )\n              }\n\n\n\n\n\n\n            </div>\n\n\n          </div>\n\n        )\n\n        break;\n      case FETCH_DEVICE_LANDING_FAILURE:\n\n        el = (<div>\n          <h2>error</h2>\n          <h2>error.message</h2>\n\n        </div>)\n\n        break;\n      default:\n        el = (\n          <div>default</div>\n        );\n\n    }\n\n    return <div>   {el}\n\n    </div>\n\n\n  }\n  componentDidMount() {\n    this.props.dispatch(getDeviceDetailsThunk(this.props.match.params.id));\n\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}