{"ast":null,"code":"import _classCallCheck from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nineleaps/test/data/ALOK_DUBEY_LPU/src/components/portForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { POST_PORT_NUMBER, POST_PORT_NUMBER_SUCCESS, POST_PORT_NUMBER_FAILURE, POST_PORT_FORM_UPDATE } from '../actions/constants';\nimport { Button, Modal } from 'react-bootstrap';\nimport { postPortThunk, postPortUpdate } from '../actions/creators';\nvar css_form = {\n  width: \"412px\",\n  height: \"292px\",\n  position: \"relative\",\n  left: \"380px\"\n};\nvar css_save_host = {\n  position: \"relative\",\n  left: \"285px\",\n  width: \"116px\",\n  bottom: \"37px\"\n};\nvar css_save_add_device = {\n  position: \"relative\",\n  left: \"46px\",\n  top: \"2px\",\n  width: \"168px\"\n};\nvar css_cancel = {\n  width: \"108px\",\n  position: \"relative\",\n  top: \"2px\"\n};\n\nvar portForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(portForm, _Component);\n\n  function portForm(props, context) {\n    var _this;\n\n    _classCallCheck(this, portForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(portForm).call(this, props, context));\n\n    _this.updateInput = function (event, type) {\n      switch (type) {\n        case \"port\":\n          _this.setState({\n            port_no: event.target.value\n          });\n\n          break;\n\n        case \"ip\":\n          _this.setState({\n            ip_address: event.target.value\n          });\n\n          break;\n\n        case \"number\":\n          _this.setState({\n            host_name: event.target.value\n          });\n\n        default:\n          _this.props.dispatch(postPortUpdate({\n            port_no: event.target.value,\n            ip_address: event.target.value,\n            host_name: event.target.value\n          }));\n\n          break;\n      }\n    };\n\n    _this.postForm = function (event) {\n      event.preventDefault();\n\n      _this.props.dispatch(postPortThunk({\n        host_name: _this.state.host_name,\n        ip_address: _this.state.ip_address,\n        port_no: _this.state.port_no,\n        type: _this.state.type,\n        oid: _this.state.oid\n      }));\n    };\n\n    _this.host_nameInputRef = React.createRef();\n    _this.ip_addressInputRef = React.createRef();\n    _this.port_noInputRef = React.createRef();\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    _this.state = {\n      host_name: '',\n      ip_address: '',\n      port_no: '',\n      type: '',\n      oid: '',\n      show: false\n    };\n    return _this;\n  }\n\n  _createClass(portForm, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    } // validateForm() {\n    //     const { host_name, ip_address, port_no } = this.props.devicepostPORT.form;\n    //     return host_name !== '' && ip_address !== '' && port_no !== '';\n    // }\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.data != null && this.props.data.data[0] != null) {\n        this.setState({\n          host_name: this.props.data.data[0] ? this.props.data.data[0].host_name : '',\n          ip_address: this.props.data.data[0] ? this.props.data.data[0].ip_address : '',\n          port_no: this.props.data.data[0] ? this.props.data.data[0].port_no : '',\n          type: this.props.type === 'configureHost' ? this.props.type : '',\n          oid: this.props.oid ? this.props.oid : ''\n        });\n      } else {\n        this.setState({\n          host_name: '',\n          ip_address: '',\n          port_no: '',\n          type: this.props.type === 'configureHost' ? this.props.type : '',\n          oid: this.props.oid ? this.props.oid : ''\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var defaultData;\n\n      if (this.props.data != null && this.props.data.data[0] != null) {\n        defaultData = this.props.data.data[0];\n      } else {\n        defaultData = null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(React.Fragment, null, React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"BARCODE\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Value:\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Timestamp\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"No of Trials\"), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"close\")))), React.createElement(\"form\", {\n        onSubmit: this.postForm,\n        style: css_form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Host Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"exampleInputEmail1\",\n        \"aria-describedby\": \"emailHelp\",\n        placeholder: \"Add a Number\",\n        defaultValue: defaultData !== null ? defaultData.host_name : \"\",\n        onChange: function onChange(e) {\n          return _this2.updateInput(e, 'number');\n        },\n        ref: this.host_nameInputRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"IP Address\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Add  a IP\",\n        onChange: function onChange(e) {\n          return _this2.updateInput(e, 'ip');\n        },\n        ref: this.ip_addressInputRef,\n        defaultValue: defaultData !== null ? defaultData.ip_address : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Port Number\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Type\",\n        onChange: function onChange(e) {\n          return _this2.updateInput(e, 'port');\n        },\n        ref: this.port_noInputRef,\n        defaultValue: this.props.type === 'configureHost' ? defaultData.port_no : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/home\",\n        type: \"submit\",\n        className: \"btn btn-primary btn-md\",\n        style: css_cancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Cancel\")), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-md\",\n        style: css_save_add_device,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Save & Add Device\"))), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-md\",\n        style: css_save_host,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \" Save Host\"))));\n    }\n  }]);\n\n  return portForm;\n}(Component);\n\nexport { portForm as default };","map":{"version":3,"sources":["/home/nineleaps/test/data/ALOK_DUBEY_LPU/src/components/portForm.js"],"names":["React","Component","Link","POST_PORT_NUMBER","POST_PORT_NUMBER_SUCCESS","POST_PORT_NUMBER_FAILURE","POST_PORT_FORM_UPDATE","Button","Modal","postPortThunk","postPortUpdate","css_form","width","height","position","left","css_save_host","bottom","css_save_add_device","top","css_cancel","portForm","props","context","updateInput","event","type","setState","port_no","target","value","ip_address","host_name","dispatch","postForm","preventDefault","state","oid","host_nameInputRef","createRef","ip_addressInputRef","port_noInputRef","handleShow","bind","handleClose","show","data","defaultData","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n    POST_PORT_NUMBER,\n    POST_PORT_NUMBER_SUCCESS,\n    POST_PORT_NUMBER_FAILURE,\n    POST_PORT_FORM_UPDATE\n} from '../actions/constants'\nimport { Button, Modal } from 'react-bootstrap';\nimport { postPortThunk, postPortUpdate } from '../actions/creators';\n\n\n\n\n\n\nconst css_form={\n    width: \"412px\",\n    height: \"292px\",\n    position: \"relative\",\n    left: \"380px\"\n}\nconst css_save_host={\n    position: \"relative\",\n    left: \"285px\",\n    width: \"116px\",\n    bottom: \"37px\"\n}\nconst css_save_add_device={\n    position: \"relative\",\n    left: \"46px\",\n    top: \"2px\",\n    width: \"168px\"\n}\nconst css_cancel={\n    width: \"108px\",\n    position: \"relative\",\n    top: \"2px\"\n}\nexport default class portForm extends Component {\n    constructor(props,context) {\n        super(props,context);\n\n   \n        this.host_nameInputRef = React.createRef();\n        this.ip_addressInputRef = React.createRef();\n        this.port_noInputRef = React.createRef();\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.state = {\n            host_name: '',\n            ip_address: '',\n            port_no: '',\n            type: '',\n            oid: '',\n            show:false\n\n        }\n\n    }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n    // validateForm() {\n    //     const { host_name, ip_address, port_no } = this.props.devicepostPORT.form;\n    //     return host_name !== '' && ip_address !== '' && port_no !== '';\n    // }\n    updateInput = (event, type) => {\n        switch (type) {\n            case \"port\":\n                this.setState({\n                    port_no: event.target.value\n                });\n                break;\n            case \"ip\":\n                this.setState({\n                    ip_address: event.target.value\n                });\n                break;\n            case \"number\":\n                this.setState({\n                    host_name: event.target.value\n                });\n            default:\n                this.props.dispatch(postPortUpdate({\n                    port_no: event.target.value,\n                    ip_address: event.target.value,\n                    host_name: event.target.value\n                }))\n                break;\n\n        }\n\n    }\n\n    postForm = (event) => {\n        event.preventDefault();\n        this.props.dispatch(postPortThunk({\n            host_name: this.state.host_name,\n            ip_address: this.state.ip_address,\n            port_no: this.state.port_no,\n            type: this.state.type,\n            oid: this.state.oid\n        }));\n    }\n\n    componentDidMount() {\n        if(this.props.data!=null && this.props.data.data[0]!=null) {\n        this.setState({\n            host_name: this.props.data.data[0]? this.props.data.data[0].host_name : '',\n            ip_address: this.props.data.data[0] ? this.props.data.data[0].ip_address : '',\n            port_no: this.props.data.data[0] ? this.props.data.data[0].port_no : '',\n            type: this.props.type === 'configureHost' ? this.props.type : '',\n            oid: this.props.oid ? this.props.oid : ''\n        });\n    } else {\n        this.setState({\n            host_name: '',\n            ip_address: '',\n            port_no: '',\n            type: this.props.type === 'configureHost' ? this.props.type : '',\n            oid: this.props.oid ? this.props.oid : ''\n        });\n    }\n    }\n    render() {\n        let defaultData;\n        if(this.props.data!=null && this.props.data.data[0]!=null) {\n            defaultData = this.props.data.data[0];\n        } else {\n            defaultData = null;\n        }\n        return (\n            <div>\n                 <>\n                           \n\n                           <Modal show={this.state.show} onHide={this.handleClose}>\n                             <Modal.Header closeButton>\n                               <Modal.Title>BARCODE<br/>\n                                \n                               </Modal.Title>\n                             </Modal.Header>\n                             <Modal.Body>\n                            \n                             </Modal.Body>\n                             <Modal.Body>\n                             Value:  \n                             </Modal.Body>\n                             <Modal.Body>\n                            Timestamp   \n                             </Modal.Body>\n                             <Modal.Body>\n\n                             No of Trials\n                             </Modal.Body>\n                        \n                            \n                             <Modal.Footer>\n                               <Button variant=\"secondary\" onClick={this.handleClose}>\n                              close\n                           </Button>\n                               \n                             \n                      \n                             </Modal.Footer>\n                           </Modal>\n                         </>\n            \n          \n            <form onSubmit={this.postForm} style={css_form}>\n              \n                <div className=\"form-group\">\n                    <label >Host Name</label>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Add a Number\" defaultValue={ defaultData !== null ? defaultData.host_name : \"\"} onChange={(e) => this.updateInput(e, 'number')} ref={this.host_nameInputRef} />\n                </div>\n                <div className=\"form-group\">\n                    <div className='row'>\n                        <div className=\"col-md-8\">\n                            <label >IP Address</label>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Add  a IP\" onChange={(e) => this.updateInput(e, 'ip')} ref={this.ip_addressInputRef} defaultValue={defaultData !== null ? defaultData.ip_address : \"\"} />\n                        </div>\n                        <div className=\"col-md-4\">\n                            <label >Port Number</label>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Type\" onChange={(e) => this.updateInput(e, 'port')} ref={this.port_noInputRef} defaultValue={this.props.type === 'configureHost' ? defaultData.port_no : \"\"} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-2\">\n                        <Link to='/home' type=\"submit\" className=\"btn btn-primary btn-md\" style={css_cancel}>\n                        Cancel</Link>\n                        \n                    </div>\n                    <div className=\"col-md-6\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-md\" style={css_save_add_device} >Save & Add Device</button></div>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <button type=\"submit\" className=\"btn btn-success btn-md\" style={css_save_host} > Save Host</button></div>\n                        \n            </form>\n               </div>  \n            \n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}